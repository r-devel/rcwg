[
    {
        "subtype": "bot_message",
        "text": "*[Bug 18856] `floor(&lt;complex&gt;)` etc  [was \"c() %% 1i is \"implemented\", 1i %% 1i is not\"]*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18856>\n\n--- Comment #3 from K Antal (<mailto:antalk2@gmail.com|antalk2@gmail.com>) ---\n\n\n&gt; I think we should aim for an implementation rather than do more\n&gt; error checking and messaging.\n\n\n\n- I do not miss the implementation. Just stumbled upon the inconsistent\n  behaviour when trying to tabulate `(input types -&gt; result type)` for\n`do_arith`.\n\n- Complex floor and related functions: The presence of multiple\n  interpretations without a clear winner leaves open the question\n  which (if any) of them should be baked in the base operators.\n\n- Failed to locate applications. Are there algorithms using\n  McDonnell's interpretation (of floor, ceiling, residue, GCD, LCM)?\n\n- I would suggest an opt-in solution. \n  It might reveal if there is a distinct preference among R package\n  authors.\n\nK Antal\n\n----\n\n# Background\n\n## Martin Machler\n  - [stackexchange: Is the\nfloor..](<https:\/\/math.stackexchange.com\/questions\/4195933\/is-the-floor-function-defined-for-complex-values\/5035950#5035950>)\n  - McDonnell's `floor(z)` satisfies `|z - floor(z)| &lt; 1`\n  - \"I think I'll be advocating to adopt this for R.\"\n\n\n## [1] Eugene McDonnell (1973) Complex Floor\n    - McDonnell, E. E., Complex Floor, APL Congress 73, North-Holland,\nAmsterdam, 1973\n    - <https:\/\/www.jsoftware.com\/papers\/eem\/complexfloor.htm>\n    -\n[GoogleScholar](<https:\/\/scholar.google.com\/scholar?q=McDonnell%2C+E.+E.%2C+Complex+Floor%2C+APL+Congress+73%2C+North-Holland%2C+Amsterdam%2C+1973>)\n\n## [2] Jeffrey O Shallit (1979)\n    - <https:\/\/cs.uwaterloo.ca\/~shallit\/Papers\/thesispt1.pdf>\n\n\n## [3] Doug Forkes (1981) Complex Floor Revisited\n    - <https:\/\/dl.acm.org\/doi\/pdf\/10.1145\/800142.805343>\n    - <https:\/\/doi.org\/10.1145\/390007.805343>\n\nMcDonnell's floor fails on \"Symmetry\" and \"Separation\", where\n\n### \"Symmetry\" \n\nWith \n\n```\nswap &lt;- funtion(z){ Im(z)+1i*Re(z) }\n```\n\n   `swap(floor(z))` should be `floor(swap(z))`.\n\n    For a `z` on the short edge of the rectangle mapped to `p+1i*q`,\n    this is not true.\n\n### \"Separation\"\n\n `floor(z)` and `ceiling(z) = -floor(-z)` should\n          only be equal when `z` is a Gaussian integer. \n\n     However, for `z=0.75+0.25i`,\n     both `floor(z)==1` and `ceiling(z)==1`\n\n### Convergence of GCD\n\nFor complex arguments\n   - FR does not always converge\n   - MR always converges, but can do so in time proportional\n     to the magnitude of its arguments\n   - HR converges logarithmically\n\n### Conclusion (Forkes)\n\n       \"My own recommendation is that FF be adopted for complex floor\n       and that if and when APL is extended to the quaternions\n       Hurwitz's functions be adopted as primitives also.\"\n\n       - Here FF is the \"primitive\" solution (as in Mathematica,\n         `floor(Re(z)+1i*floor(Im(z))`)\n\n## Ruehr, K. F. (1982, July). A Survey of Extensions to APL. \n\nIn Proceedings of the international conference on APL (pp. 277-314).\n\n    - <https:\/\/dl.acm.org\/doi\/pdf\/10.1145\/800071.802257>\n\n    - \"The major issues that have been examined with regard to complex\n      numbers include ... the definition of complex floor and ceiling\n      functions (for more on the last two topics, see [39, 60, 111,\n      112]). Of these issues, only the last is still in contention,\n      the major competing proposals being those of McDonnell [112] and\n      Forkes [39].\"\n\n\n## Henry G. Baker (1993) Complex Gaussian Integers for 'Gaussian Graphics'\n\n<https:\/\/citeseerx.ist.psu.edu\/document?repid=rep1&amp;type=pdf&amp;doi=0bf8ecaf007b30daeef8960a8887725ec1d0e0d3>\n\n    - Cites [1] and [3].\n    - \"This choice of representatives is different from that in\n      [McDonnell73] and [Forkes81], for reasons given below.\"\n   - \"CONCLUSIONS: ... We prefer the use of tilted *squares* for\n               representing the remainders of complex division, rather\n",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1740311347.341109",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gXEU3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18856] ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "floor(<complex>)",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " etc  [was \"c() %% 1i is \"implemented\", 1i %% 1i is not\"]",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18856"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #3 from K Antal ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:antalk2@gmail.com",
                                "text": "antalk2@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\n\n\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think we should aim for an implementation rather than do more\nerror checking and messaging."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\n\n\n\n\n- I do not miss the implementation. Just stumbled upon the inconsistent\n  behaviour when trying to tabulate "
                            },
                            {
                                "type": "text",
                                "text": "(input types -> result type)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for\n"
                            },
                            {
                                "type": "text",
                                "text": "do_arith",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\n- Complex floor and related functions: The presence of multiple\n  interpretations without a clear winner leaves open the question\n  which (if any) of them should be baked in the base operators.\n\n- Failed to locate applications. Are there algorithms using\n  McDonnell's interpretation (of floor, ceiling, residue, GCD, LCM)?\n\n- I would suggest an opt-in solution. \n  It might reveal if there is a distinct preference among R package\n  authors.\n\nK Antal\n\n----\n\n# Background\n\n## Martin Machler\n  - [stackexchange: Is the\nfloor..]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/math.stackexchange.com\/questions\/4195933\/is-the-floor-function-defined-for-complex-values\/5035950#5035950"
                            },
                            {
                                "type": "text",
                                "text": ")\n  - McDonnell's "
                            },
                            {
                                "type": "text",
                                "text": "floor(z)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " satisfies "
                            },
                            {
                                "type": "text",
                                "text": "|z - floor(z)| < 1",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n  - \"I think I'll be advocating to adopt this for R.\"\n\n\n\n## [1] Eugene McDonnell (1973) Complex Floor\n    - McDonnell, E. E., Complex Floor, APL Congress 73, North-Holland,\nAmsterdam, 1973\n    - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.jsoftware.com\/papers\/eem\/complexfloor.htm"
                            },
                            {
                                "type": "text",
                                "text": "\n    -\n[GoogleScholar]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/scholar.google.com\/scholar?q=McDonnell%2C+E.+E.%2C+Complex+Floor%2C+APL+Congress+73%2C+North-Holland%2C+Amsterdam%2C+1973"
                            },
                            {
                                "type": "text",
                                "text": ")\n\n## [2] Jeffrey O Shallit (1979)\n    - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/cs.uwaterloo.ca\/~shallit\/Papers\/thesispt1.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\n\n\n\n## [3] Doug Forkes (1981) Complex Floor Revisited\n    - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/dl.acm.org\/doi\/pdf\/10.1145\/800142.805343"
                            },
                            {
                                "type": "text",
                                "text": "\n    - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/doi.org\/10.1145\/390007.805343"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMcDonnell's floor fails on \"Symmetry\" and \"Separation\", where\n\n### \"Symmetry\" \n\nWith \n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "swap <- funtion(z){ Im(z)+1i*Re(z) }\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\n   "
                            },
                            {
                                "type": "text",
                                "text": "swap(floor(z))",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " should be "
                            },
                            {
                                "type": "text",
                                "text": "floor(swap(z))",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\n    For a "
                            },
                            {
                                "type": "text",
                                "text": "z",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " on the short edge of the rectangle mapped to "
                            },
                            {
                                "type": "text",
                                "text": "p+1i*q",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ",\n    this is not true.\n\n### \"Separation\"\n\n "
                            },
                            {
                                "type": "text",
                                "text": "floor(z)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "ceiling(z) = -floor(-z)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " should\n          only be equal when "
                            },
                            {
                                "type": "text",
                                "text": "z",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is a Gaussian integer. \n\n     However, for "
                            },
                            {
                                "type": "text",
                                "text": "z=0.75+0.25i",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ",\n     both "
                            },
                            {
                                "type": "text",
                                "text": "floor(z)==1",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "ceiling(z)==1",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\n### Convergence of GCD\n\nFor complex arguments\n   - FR does not always converge\n   - MR always converges, but can do so in time proportional\n     to the magnitude of its arguments\n   - HR converges logarithmically\n\n### Conclusion (Forkes)\n\n       \"My own recommendation is that FF be adopted for complex floor\n       and that if and when APL is extended to the quaternions\n       Hurwitz's functions be adopted as primitives also.\"\n\n       - Here FF is the \"primitive\" solution (as in Mathematica,\n         "
                            },
                            {
                                "type": "text",
                                "text": "floor(Re(z)+1i*floor(Im(z))",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ")\n\n## Ruehr, K. F. (1982, July). A Survey of Extensions to APL. \n\nIn Proceedings of the international conference on APL (pp. 277-314).\n\n    - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/dl.acm.org\/doi\/pdf\/10.1145\/800071.802257"
                            },
                            {
                                "type": "text",
                                "text": "\n\n    - \"The major issues that have been examined with regard to complex\n      numbers include ... the definition of complex floor and ceiling\n      functions (for more on the last two topics, see [39, 60, 111,\n      112]). Of these issues, only the last is still in contention,\n      the major competing proposals being those of McDonnell [112] and\n      Forkes [39].\"\n\n\n\n## Henry G. Baker (1993) Complex Gaussian Integers for 'Gaussian Graphics'\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/citeseerx.ist.psu.edu\/document?repid=rep1&amp;type=pdf&amp;doi=0bf8ecaf007b30daeef8960a8887725ec1d0e0d3",
                                "text": "https:\/\/citeseerx.ist.psu.edu\/document?repid=rep1&type=pdf&doi=0bf8ecaf007b30daeef8960a8887725ec1d0e0d3"
                            },
                            {
                                "type": "text",
                                "text": "\n\n    - Cites [1] and [3].\n    - \"This choice of representatives is different from that in\n      [McDonnell73] and [Forkes81], for reasons given below.\"\n   - \"CONCLUSIONS: ... We prefer the use of tilted "
                            },
                            {
                                "type": "text",
                                "text": "squares",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for\n               representing the remainders of complex division, rather"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "               than the rectangles of APL. Square residue sets seem to\n               offer the most elegant utilization of the two real\n               parameters (real and imaginary parts) implicit in a\n               complex divisor—as defining the size and orientation of\n               the square. Different division functions are useful in\n               different contexts, however, so we recommend that a\n               multiplicity of division functions be provided.\"\n\n\n## Bob Smith (2015) Complex Floor Boundaries in APL\n\n- <http:\/\/www.sudleyplace.com\/APL\/Complex%20Floor%20Boundaries%20in%20APL.pdf>\n\n(About two implementations of McDonnel's floor)\n\n  - \"Of the several definitions of Complex Floor, there is one from Gene\n  McDonnell for which there are two different implementations in\n  APL. This is of interest primarily because the two algorithms\n  produce different results in certain edge conditions.\"\n\n  - cites [1] and [3]\n\n  - mf: McDonnell's Floor as per **McDonnell**\n  - MF: McDonnell's Floor as per **Forkes**\n\n  - \"More careful analysis shows that the problem in MF is in the\n    calculation of A-B on line 5.\"\n\n  - \"While MF has several desirable properties (shorter, more readable,\n    and a scalar algorithm) vs.  mf, unfortunately it is sensitive to\n    the precision of its calculations. In particular its calculations\n    need at least one more bit of precision (a guard bit, as it were)\n    than in its input to produce correct results in certain edge\n    conditions.\"\n\n## John D. Cook (2021)\n\n   - <https:\/\/www.johndcook.com\/blog\/2021\/08\/03\/complex-floor\/>\n\n   - \"Mathematica defines the floor of a complex number by applying the\n     function to the real and imaginary parts separately.\"\n   - A comment mentions [1]\n\n## An implementation in go (as part of an **APL** interpreter: ivy)\n\n  -\n<https:\/\/github.com\/robpike\/ivy\/blob\/d319d0ec31c659ab9b6ca169f4ef5fcdffd2a64e\/value\/complex.go#L188>",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1740311347.363309",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xKbq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "than the rectangles of APL. Square residue sets seem to\n               offer the most elegant utilization of the two real\n               parameters (real and imaginary parts) implicit in a\n               complex divisor—as defining the size and orientation of\n               the square. Different division functions are useful in\n               different contexts, however, so we recommend that a\n               multiplicity of division functions be provided.\"\n\n\n\n## Bob Smith (2015) Complex Floor Boundaries in APL\n\n- "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.sudleyplace.com\/APL\/Complex%20Floor%20Boundaries%20in%20APL.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\n\n(About two implementations of McDonnel's floor)\n\n  - \"Of the several definitions of Complex Floor, there is one from Gene\n  McDonnell for which there are two different implementations in\n  APL. This is of interest primarily because the two algorithms\n  produce different results in certain edge conditions.\"\n\n  - cites [1] and [3]\n\n  - mf: McDonnell's Floor as per **McDonnell**\n  - MF: McDonnell's Floor as per **Forkes**\n\n  - \"More careful analysis shows that the problem in MF is in the\n    calculation of A-B on line 5.\"\n\n  - \"While MF has several desirable properties (shorter, more readable,\n    and a scalar algorithm) vs.  mf, unfortunately it is sensitive to\n    the precision of its calculations. In particular its calculations\n    need at least one more bit of precision (a guard bit, as it were)\n    than in its input to produce correct results in certain edge\n    conditions.\"\n\n## John D. Cook (2021)\n\n   - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.johndcook.com\/blog\/2021\/08\/03\/complex-floor\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\n   - \"Mathematica defines the floor of a complex number by applying the\n     function to the real and imaginary parts separately.\"\n   - A comment mentions [1]\n\n## An implementation in go (as part of an **APL** interpreter: ivy)\n\n  -\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/robpike\/ivy\/blob\/d319d0ec31c659ab9b6ca169f4ef5fcdffd2a64e\/value\/complex.go#L188"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18855] parseLatex() makes several errors in parsing*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18855>\n\n--- Comment #7 from Kurt Hornik (<mailto:Kurt.Hornik@wu.ac.at|Kurt.Hornik@wu.ac.at>) ---\nThanks: committed now in the trunk with c87801.\nPassed make check-all ok for me and also worked fine in my local checks \non the CRAN Sweave vignettes ...",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1740335691.468449",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k1V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18855] parseLatex() makes several errors in parsing",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18855"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #7 from Kurt Hornik ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:Kurt.Hornik@wu.ac.at",
                                "text": "Kurt.Hornik@wu.ac.at",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nThanks: committed now in the trunk with c87801.\nPassed make check-all ok for me and also worked fine in my local checks \non the CRAN Sweave vignettes ..."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]