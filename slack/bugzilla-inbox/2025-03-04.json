[
    {
        "subtype": "bot_message",
        "text": "*[Bug 18865] New: Tweak: use any()\/!any over length(grep()) &gt;0 \/ ==0*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18865>\n\n            Bug ID: 18865\n           Summary: Tweak: use any()\/!any over length(grep()) &gt;0 \/ ==0\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: All\n                OS: All\n            Status: UNCONFIRMED\n          Severity: minor\n          Priority: P5\n         Component: Misc\n          Assignee: <mailto:R-core@R-project.org|R-core@R-project.org>\n          Reporter: <mailto:michaelchirico4@gmail.com|michaelchirico4@gmail.com>\n\nCreated attachment 3464\n  --&gt; <https:\/\/bugs.r-project.org\/attachment.cgi?id=3464&amp;action=edit>\nswitch length(grep()) to any(grepl())\n\n`any(grepl(...))` gives the same result as `length(grep(...)) &gt; 0`, but is more\nconcise &amp; (micro-)faster.\n\nAnalogous reasoning applies in similar cases -- the idea is that `any()` is the\n\"right\" way to do logical aggregation.\n\nI found these changes while testing updated logic for\n`lintr::boolean_arithmetic_linter()`: <https:\/\/github.com\/r-lib\/lintr\/pull\/2814>\n\nAs ever with patches like this, these are suggestions -- I trust editorial\njudgment on further refinements :)\n\nPS there's also two applications of `outer_negation_linter()`:\n<https:\/\/lintr.r-lib.org\/reference\/outer_negation_linter.html>:\n\n```\nsum(!vpListings) &gt; 0\n--&gt;\nany(!vpListings)\n--&gt;\n!all(vpListings)\n```\n\n```\nsum(!fs$dups) == 0L\n--&gt;\n!any(!fs$dups)\n--&gt;\n!!all(fs$dups)\n--&gt;\nall(fs$dups)\n```\n\nI similarly trust the updated code is a lot easier to reason about.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1741133347.202639",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TT3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18865] New: Tweak: use any()\/!any over length(grep()) >0 \/ ==0",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18865"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18865\n           Summary: Tweak: use any()\/!any over length(grep()) >0 \/ ==0\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: All\n                OS: All\n            Status: UNCONFIRMED\n          Severity: minor\n          Priority: P5\n         Component: Misc\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:michaelchirico4@gmail.com",
                                "text": "michaelchirico4@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": "\n\nCreated attachment 3464\n  --> "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3464&amp;action=edit",
                                "text": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3464&action=edit"
                            },
                            {
                                "type": "text",
                                "text": "\nswitch length(grep()) to any(grepl())\n\n"
                            },
                            {
                                "type": "text",
                                "text": "any(grepl(...))",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " gives the same result as "
                            },
                            {
                                "type": "text",
                                "text": "length(grep(...)) > 0",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but is more\nconcise & (micro-)faster.\n\nAnalogous reasoning applies in similar cases -- the idea is that "
                            },
                            {
                                "type": "text",
                                "text": "any()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is the\n\"right\" way to do logical aggregation.\n\nI found these changes while testing updated logic for\n"
                            },
                            {
                                "type": "text",
                                "text": "lintr::boolean_arithmetic_linter()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-lib\/lintr\/pull\/2814"
                            },
                            {
                                "type": "text",
                                "text": "\n\nAs ever with patches like this, these are suggestions -- I trust editorial\njudgment on further refinements :)\n\nPS there's also two applications of "
                            },
                            {
                                "type": "text",
                                "text": "outer_negation_linter()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ":\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/lintr.r-lib.org\/reference\/outer_negation_linter.html"
                            },
                            {
                                "type": "text",
                                "text": ":\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "sum(!vpListings) > 0\n-->\nany(!vpListings)\n-->\n!all(vpListings)\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "sum(!fs$dups) == 0L\n-->\n!any(!fs$dups)\n-->\n!!all(fs$dups)\n-->\nall(fs$dups)\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nI similarly trust the updated code is a lot easier to reason about."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]