[
    {
        "subtype": "bot_message",
        "text": "*[Bug 18417] factanal returns useless SS loading values*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18417>\n\n--- Comment #15 from Martin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) ---\n(In reply to Coen Bernaards from comment #14)\n&gt; This bug remains open.  \n&gt; Can I work with someone to get this resolved?\n\nYes, we should get this done. In comment #2, Peter Dalgaard (R-core) agreed..\nYour last patch still applies cleanly to current R-devel; looks good to me.\n\nWhat you (nor the OP, Florian) did not provide yet is a minimal reproducible\nexample (MRE (aka MWE, W=\"working\")) of old and new behavior. In the context of\n(base) R,  MRE includes\n\n- only base packages\n- directly working in an empty globalenv() {\"workspace\"}.\n\nThere's also (among dozens of more, if you web-search for it):\n<https:\/\/stackoverflow.com\/questions\/5963269\/how-to-make-a-great-r-reproducible-example#5963610>",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1742461720.762049",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D76W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18417] factanal returns useless SS loading values",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18417"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #15 from Martin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\n(In reply to Coen Bernaards from comment #14)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This bug remains open.  \nCan I work with someone to get this resolved?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nYes, we should get this done. In comment #2, Peter Dalgaard (R-core) agreed..\nYour last patch still applies cleanly to current R-devel; looks good to me.\n\nWhat you (nor the OP, Florian) did not provide yet is a minimal reproducible\nexample (MRE (aka MWE, W=\"working\")) of old and new behavior. In the context of\n(base) R,  MRE includes\n\n- only base packages\n- directly working in an empty globalenv() {\"workspace\"}.\n\nThere's also (among dozens of more, if you web-search for it):\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/stackoverflow.com\/questions\/5963269\/how-to-make-a-great-r-reproducible-example#5963610"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18873] New: handling of ... has unexpected behavior in R 4.4*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18873>\n\n            Bug ID: 18873\n           Summary: handling of ... has unexpected behavior in R 4.4\n           Product: R\n           Version: R 4.4.x\n          Hardware: Other\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Language\n          Assignee: <mailto:R-core@R-project.org|R-core@R-project.org>\n          Reporter: <mailto:xcheng@Bamfunds.com|xcheng@Bamfunds.com>\n\nR 4.3 (correct behavior):\n\nmyf &lt;- function(...){\n\nprint(str(..2))\n}\nmyf('2023-01-13', )\nsymbol\nNULL\n\nR 4.4 (error out):\n\nmyf &lt;- function(...){\nprint(str(..2))\n}\nmyf('2023-01-13', )\nError in myf(\"2023-01-13\", ) : argument \"..2\" is missing, with no default.\n\n... behavior changes",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1742479550.135599",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d2E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18873] New: handling of ... has unexpected behavior in R 4.4",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18873"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18873\n           Summary: handling of ... has unexpected behavior in R 4.4\n           Product: R\n           Version: R 4.4.x\n          Hardware: Other\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Language\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:xcheng@Bamfunds.com",
                                "text": "xcheng@Bamfunds.com"
                            },
                            {
                                "type": "text",
                                "text": "\n\nR 4.3 (correct behavior):\n\nmyf <- function(...){\n\nprint(str(..2))\n}\nmyf('2023-01-13', )\nsymbol\nNULL\n\nR 4.4 (error out):\n\nmyf <- function(...){\nprint(str(..2))\n}\nmyf('2023-01-13', )\nError in myf(\"2023-01-13\", ) : argument \"..2\" is missing, with no default.\n\n... behavior changes"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18417] factanal returns useless SS loading values*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18417>\n\n--- Comment #16 from Martin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) ---\nAfter applying the patch (attachment 3094),\nI get the following problem\n\n```\nrequire(stats)\n(Harman23.FA &lt;- factanal(factors = 1, covmat = Harman23.cor))\nError in rot$Phi : $ operator is invalid for atomic vectors\n```\n\nYour new code wrongly assumes that `rot` is a list.\nI've fixed that code line to\n```\n   if(is.list(rot) &amp;&amp; !is.null(rot$Phi)) attr(load, \"covariance\") &lt;- rot$Phi\n```\nsuch that the example above now works again (for me; all not yet committed).",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1742480385.776749",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LwV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18417] factanal returns useless SS loading values",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18417"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #16 from Martin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nAfter applying the patch (attachment 3094),\nI get the following problem\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "require(stats)\n(Harman23.FA <- factanal(factors = 1, covmat = Harman23.cor))\nError in rot$Phi : $ operator is invalid for atomic vectors\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nYour new code wrongly assumes that "
                            },
                            {
                                "type": "text",
                                "text": "rot",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is a list.\nI've fixed that code line to"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "   if(is.list(rot) && !is.null(rot$Phi)) attr(load, \"covariance\") <- rot$Phi\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "such that the example above now works again (for me; all not yet committed)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18417] factanal returns useless SS loading values*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18417>\n\n--- Comment #17 from Coen Bernaards (<mailto:coen.bernaards@gmail.com|coen.bernaards@gmail.com>) ---\nThe issue is that bug 16391 is related to this, and deals with the issue you\njust ran into.  What I would like you try is to include BOTH 3094 and 3095\n\npatch 3095 deals with 16391 and 15848.\n<https:\/\/bugs.r-project.org\/attachment.cgi?id=3095>\n\nIs there a way to try this? \nI will work on a MRE",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1742482874.366019",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Whmd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18417] factanal returns useless SS loading values",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18417"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #17 from Coen Bernaards ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:coen.bernaards@gmail.com",
                                "text": "coen.bernaards@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nThe issue is that bug 16391 is related to this, and deals with the issue you\njust ran into.  What I would like you try is to include BOTH 3094 and 3095\n\npatch 3095 deals with 16391 and 15848.\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3095"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIs there a way to try this? \nI will work on a MRE"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18873] handling of ... has unexpected behavior in R 4.4*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18873>\n\nMartin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |maechler@stat.math.ethz.ch\n\n--- Comment #1 from Martin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) ---\nActually, the change in behavior happened between R 4.3.2  and R 4.3.3\nwhich is somewhat rare.\n\nNote that this was quite a conscious change.\nInstead of `print(str(..2))` you can try to see a bit more what was going on, \nbefore we (the R core developers) changed R's behavior here to signal the\n```\n   Error in &lt;..&gt;: argument \"..2\" is missing, with no default.\n```\n\nR 4.3.2 and earlier:\n```\n&gt; a2 &lt;- function(...) ..2; dput(r &lt;- a2(\"arg1\", )) # dput prints \"nothing\"\n\n&gt; a2n &lt;- function(...) { cat(\"nargs():\", nargs(),\"\\n\"); ..2 }\n dput(r &lt;- a2n(\"arg1\", ))\nnargs(): 2 \n```\nYes, formally we have 2 arguments in the call, and that is also true in R 4.3.3\n and later.\nHowever, the return value `r`  of the above is the (well known to R experts ..\nbut really not something that should exist on the R top level) \"empty symbol\"\nwhich R uses internally as place holder for a truly missing argument.\nI.e., you cannot do much with `r`  as you always are told that it is missing:\n\n```\n&gt; r\nError: argument \"r\" is missing, with no default\n&gt; find(\"r\")\n[1] \".GlobalEnv\"\n              ## so, yes, it is there in our workspace, but ...\n&gt; str(r)\nError: argument \"r\" is missing, with no default\n&gt; object.size(r)\nError: argument \"r\" is missing, with no default\n&gt; \n```\nHence, the above now longer works very much on purpose.\n\nThe experts know how you can still get this funny R object in an R session,\nbut conceptually  that actually \"should not\" be legal in R .. and no top level\nR code should rely on the existence of such strange animal. \nThe only thing guaranteed by R's API is that  missing(.)  works correctly\ninside functions.\n\nI think we will close this PR  with  \"Works as documented\"  soon.\n\nFor now, I leave it open as indeed, the change in behavior you observed is\ncorrect,\nand others may want to comment further..\n(and yes, I know that some widely used CRAN R package with somewhat famous\nauthors has even provided a function to explicitly create this \"strange beast\"\n.. which hence is also \"illegal\" in the above sense.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1742483187.068689",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nh8x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18873] handling of ... has unexpected behavior in R 4.4",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18873"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMartin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |maechler@stat.math.ethz.ch\n\n--- Comment #1 from Martin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nActually, the change in behavior happened between R 4.3.2  and R 4.3.3\nwhich is somewhat rare.\n\nNote that this was quite a conscious change.\nInstead of "
                            },
                            {
                                "type": "text",
                                "text": "print(str(..2))",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " you can try to see a bit more what was going on, \nbefore we (the R core developers) changed R's behavior here to signal the"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "   Error in <..>: argument \"..2\" is missing, with no default.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nR 4.3.2 and earlier:"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "> a2 <- function(...) ..2; dput(r <- a2(\"arg1\", )) # dput prints \"nothing\"\n\n> a2n <- function(...) { cat(\"nargs():\", nargs(),\"\\n\"); ..2 }\n dput(r <- a2n(\"arg1\", ))\nnargs(): 2 \n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, formally we have 2 arguments in the call, and that is also true in R 4.3.3\n and later.\nHowever, the return value "
                            },
                            {
                                "type": "text",
                                "text": "r",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  of the above is the (well known to R experts ..\nbut really not something that should exist on the R top level) \"empty symbol\"\nwhich R uses internally as place holder for a truly missing argument.\nI.e., you cannot do much with "
                            },
                            {
                                "type": "text",
                                "text": "r",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  as you always are told that it is missing:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "> r\nError: argument \"r\" is missing, with no default\n> find(\"r\")\n[1] \".GlobalEnv\"\n              ## so, yes, it is there in our workspace, but ...\n> str(r)\nError: argument \"r\" is missing, with no default\n> object.size(r)\nError: argument \"r\" is missing, with no default\n> \n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hence, the above now longer works very much on purpose.\n\nThe experts know how you can still get this funny R object in an R session,\nbut conceptually  that actually \"should not\" be legal in R .. and no top level\nR code should rely on the existence of such strange animal. \nThe only thing guaranteed by R's API is that  missing(.)  works correctly\ninside functions.\n\nI think we will close this PR  with  \"Works as documented\"  soon.\n\nFor now, I leave it open as indeed, the change in behavior you observed is\ncorrect,\nand others may want to comment further..\n(and yes, I know that some widely used CRAN R package with somewhat famous\nauthors has even provided a function to explicitly create this \"strange beast\"\n.. which hence is also \"illegal\" in the above sense."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]